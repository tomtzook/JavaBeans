plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply from: rootProject.file('extras.gradle')

group = GROUP
version = VERSION

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.7.22'
}

jar {
    archiveBaseName.set(project.name)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('sources')

    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('javadoc')

    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'jmath'
                description = 'Beans for Java'
                url = 'https://github.com/tomtzook/JavaBeans'

                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = ' http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        id = 'tomtzook'
                        name = 'Tom Tzook'
                        email = 'tomtzook@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/tomtzook/JavaBeans.git'
                    developerConnection = 'scm:git:ssh://github.com/tomtzook/JavaBeans.git'
                    url = 'https://github.com/tomtzook/JavaBeans'
                }
            }
        }
    }

    repositories {
        maven {
            if (isReleaseBuild()) {
                name = 'NexusStaging'
                url = NEXUS_RELEASE_REPOSITORY_URL
            } else {
                name = 'NexusSnapshot'
                url = NEXUS_SNAPSHOT_REPOSITORY_URL
            }

            credentials {
                username getNexusUsername()
                password getNexusPassword()
            }
        }
    }
}

if (shouldSign()) {
    signing {
        sign publishing.publications.mavenJava
    }
}

